diff --git a/SConstruct b/SConstruct
index e9aa2ca0b16..c965482f5cd 100644
--- a/SConstruct
+++ b/SConstruct
@@ -316,7 +316,7 @@ add_option(
     'dbg',
     choices=['on', 'off'],
     const='on',
-    default=build_profile.dbg,
+    default='off',
     help='Enable runtime debugging checks',
     nargs='?',
     type='choice',
@@ -353,7 +353,7 @@ add_option(
     'opt',
     choices=['on', 'debug', 'size', 'off', 'auto'],
     const='on',
-    default=build_profile.opt,
+    default='on',
     help='Enable compile-time optimization',
     nargs='?',
     type='choice',
@@ -379,7 +379,7 @@ add_option(
     action="append",
     choices=experimental_optimization_choices,
     const=experimental_optimization_choices[0],
-    default=['+sandybridge'],
+    default=[],
     help='Enable experimental optimizations',
     nargs='?',
     type='choice',
diff --git a/src/third_party/mozjs/SConscript b/src/third_party/mozjs/SConscript
index 56e9c78e4f9..f5bb91158ad 100644
--- a/src/third_party/mozjs/SConscript
+++ b/src/third_party/mozjs/SConscript
@@ -147,8 +147,7 @@ sources = [
 ]

 if env['TARGET_ARCH'] == 'x86_64' and not env.TargetOSIs('windows'):
-    env.Append(CCFLAGS=['-mavx2'])
-    sources.extend(["extract/mozglue/misc/SIMD_avx2.cpp", "extract/mozglue/misc/SSE.cpp"])
+    sources.extend(["extract/mozglue/misc/SSE.cpp"])

 if env.TargetOSIs('windows'):
     sources.extend([
diff --git a/src/third_party/mozjs/extract/mozglue/misc/SIMD.cpp b/src/third_party/mozjs/extract/mozglue/misc/SIMD.cpp
index 3893de57b32..7db5a669305 100644
--- a/src/third_party/mozjs/extract/mozglue/misc/SIMD.cpp
+++ b/src/third_party/mozjs/extract/mozglue/misc/SIMD.cpp
@@ -448,7 +448,8 @@ const char* SIMD::memchr8SSE2(const char* ptr, char value, size_t length) {
 // assertion failure. Accordingly, we just don't allow that to happen. We
 // are not particularly concerned about ensuring that newer 32 bit processors
 // get access to the AVX2 functions exposed here.
-#  if defined(MOZILLA_MAY_SUPPORT_AVX2) && defined(__x86_64__)
+#if 0
+//#  if defined(MOZILLA_MAY_SUPPORT_AVX2) && defined(__x86_64__)

 bool SupportsAVX2() { return supports_avx2(); }

diff --git a/src/third_party/snappy/platform/build_linux_x86_64/config.h b/src/third_party/snappy/platform/build_linux_x86_64/config.h
index 94af08ae0d5..8f34121d77a 100644
--- a/src/third_party/snappy/platform/build_linux_x86_64/config.h
+++ b/src/third_party/snappy/platform/build_linux_x86_64/config.h
@@ -47,7 +47,7 @@
 #define SNAPPY_HAVE_SSSE3 1

 /* Define to 1 if you target processors with SSE4.2 and have <crc32intrin.h>. */
-#define SNAPPY_HAVE_X86_CRC32 1
+#define SNAPPY_HAVE_X86_CRC32 0

 /* Define to 1 if you target processors with BMI2+ and have <bmi2intrin.h>. */
 #define SNAPPY_HAVE_BMI2 0
